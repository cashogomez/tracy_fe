@use '@angular/material' as mat;
@import "colors";
@import "fonts";
@import "vendor";

html, body {
    height: 100%;
    margin: 0 auto;
    font-family: $base-font-family;
    font-size: $base-font-size;
    line-height: $base-line-height;
    background-color: white;
}
.mat-toolbar.mat-primary {
    background: $primary;
    color: $on-primary;
  }
.mat-raised-button.mat-toolbar.mat-primary {
    background: $primary;
    color: $on-primary;
  }
  // Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//$theme-primary: mat.define-palette(mat.$indigo-palette);
$theme-primary: mat.define-palette(mat.$light-blue-palette);
$theme-accent: mat.define-palette(mat.$indigo-palette, 900, A100, A400);

// The warn palette is optional (defaults to red).
$theme-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((
  color: (
    primary: $theme-primary,
    accent: $theme-accent,
    warn: $theme-warn,
  ),
  typography: mat.define-typography-config(),
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);